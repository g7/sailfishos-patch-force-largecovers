Index: /usr/share/lipstick-jolla-home-qt5/layers/HomeLayer.qml
===================================================================
--- .orig/usr/share/lipstick-jolla-home-qt5/layers/HomeLayer.qml
+++ /usr/share/lipstick-jolla-home-qt5/layers/HomeLayer.qml
@@ -169,7 +169,7 @@ Pannable {
         height: rotation % 180 == 0
                     ? Lipstick.compositor.height
                     : Lipstick.compositor.width
-        z: -1000
+        z: currentItem != switcher ? -1000 : 100
 
         StatusBar {
             id: statusBar
@@ -179,7 +179,7 @@ Pannable {
             backgroundVisible: true
             y: -currentItem.statusOffset * (1.0-homescreen.progress) - (alternateItem ? alternateItem.statusOffset * homescreen.progress : 0)
             updatesEnabled: Lipstick.compositor.homeActive || (Lipstick.compositor.peekingLayer.exposed && !Lipstick.compositor.peekingLayer.opaque)
-            opacity: Math.min(1.0, opacityFromY, currentItem.statusOpacity)
+            opacity: currentItem != switcher ? Math.min(1.0, opacityFromY, currentItem.statusOpacity) : 1.0
         }
     }
 
Index: /usr/share/lipstick-jolla-home-qt5/layers/SwitcherLayer.qml
===================================================================
--- .orig/usr/share/lipstick-jolla-home-qt5/layers/SwitcherLayer.qml
+++ /usr/share/lipstick-jolla-home-qt5/layers/SwitcherLayer.qml
@@ -10,7 +10,7 @@ PannableLayer {
     property alias overlayItem: overlay
 
     property real contentY
-    statusOffset: Math.min(contentY, statusBar.height + Theme.paddingMedium)
+    statusOffset: (desktop != null && desktop.switcher.housekeepingMenuActive) ? Math.min(contentY, statusBar.height + Theme.paddingMedium) : 0
 
     Item {
         id: content
Index: /usr/share/lipstick-jolla-home-qt5/statusarea/StatusBar.qml
===================================================================
--- .orig/usr/share/lipstick-jolla-home-qt5/statusarea/StatusBar.qml
+++ /usr/share/lipstick-jolla-home-qt5/statusarea/StatusBar.qml
@@ -26,7 +26,15 @@ Item {
             bottomMargin: -Theme.paddingLarge
         }
         gradient: Gradient {
-            GradientStop { position: 0; color: Qt.rgba(0,0,0,0.1) }
+            GradientStop {
+                position: 0;
+                color: Theme.rgba(
+                    Theme.highlightDimmerColor,
+                    (desktop != null && desktop.switcher.housekeepingMenuActive) ?
+                        0.1 :
+                        0.7
+                )
+            }
             GradientStop { position: 1; color: "transparent" }
         }
         opacity: 1.0 - Math.abs(statusBar.y/Theme.paddingMedium)
Index: /usr/share/lipstick-jolla-home-qt5/switcher/Switcher.qml
===================================================================
--- .orig/usr/share/lipstick-jolla-home-qt5/switcher/Switcher.qml
+++ /usr/share/lipstick-jolla-home-qt5/switcher/Switcher.qml
@@ -12,6 +12,7 @@ import com.jolla.lipstick 0.1
 import Sailfish.Silica 1.0
 import Sailfish.Silica.private 1.0
 import Sailfish.Lipstick 1.0
+import org.nemomobile.configuration 1.0
 import "../compositor"
 import "../main"
 
@@ -33,11 +34,6 @@ SilicaFlickable {
     onSwitcherVisibleChanged: {
         if (!switcherVisible) {
             closeApplicationEnabled = false
-            // The view is completely hidden. The delay is a grace period, so
-            // that if you quickly exit and reenter the view has not moved.
-            resetPosition(300)
-        } else {
-            cancelResetPosition()
         }
         if (columnUpdateTimer.running) {
             columnUpdateTimer.stop()
@@ -320,6 +316,18 @@ SilicaFlickable {
         visible: Lipstick.compositor.switcherLayer.scale === 1.0 && switcherRoot.contentHeight > switcherRoot.height
     }
 
+    ConfigurationGroup {
+        id: switcherSettings
+
+        path: "/desktop/lipstick-jolla-home-qt5/homescreenSwitcher"
+
+        property string coverSize: "large"
+
+        onCoverSizeChanged: {
+            switcherGrid.updateColumns()
+        }
+    }
+
     MouseArea {
         id: switcherWrapper
 
@@ -350,7 +358,6 @@ SilicaFlickable {
             readonly property real minimumHeight: switcherRoot.height - statusBarHeight - ((largeScreen ? 5 : 3) * Theme.paddingLarge)
             readonly property real maximumWidth: switcherRoot.width - 2*Theme.paddingLarge
 
-            readonly property bool allowSmallCovers: !largeScreen
             readonly property int smallColumns: (maximumWidth + spacing) / (Theme.coverSizeSmall.width + spacing)
 
             readonly property int largeColumns: Math.min(4, (maximumWidth + spacing) / (Theme.coverSizeLarge.width + spacing))
@@ -372,7 +379,8 @@ SilicaFlickable {
 
             function doUpdateColumns() {
                 var cols = switcherGrid.largeColumns
-                if (switcherGrid.allowSmallCovers && switcherModel.itemCount > switcherGrid.largeItemCount)
+                if ((switcherSettings.coverSize == "dynamic" && switcherModel.itemCount > switcherGrid.largeItemCount)
+                    || switcherSettings.coverSize == "small")
                     cols = switcherGrid.smallColumns
                 if (cols !== switcherGrid.columns) {
                     scrollAnimation.stop()
@@ -397,7 +405,8 @@ SilicaFlickable {
                 ScriptAction {
                     script: {
                         var cols = switcherGrid.largeColumns
-                        if (switcherGrid.allowSmallCovers && switcherModel.itemCount > switcherGrid.largeItemCount)
+                        if ((switcherSettings.coverSize == "dynamic" && switcherModel.itemCount > switcherGrid.largeItemCount)
+                            || switcherSettings.coverSize == "small")
                             cols = switcherGrid.smallColumns
                         switcherGrid.columns = cols
                         switcherGrid.coverSize = switcherGrid.columns == switcherGrid.largeColumns ? Theme.coverSizeLarge : Theme.coverSizeSmall
